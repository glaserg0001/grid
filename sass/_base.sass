*, :before, :after
	padding: 0
	margin: 0
	box-sizing: inherit

html
	box-sizing: border-box
	font-family: sans-serif
	font-size: 100%
	line-height: 1.2
html,body
	height: 100%
a
	color: $main
	text-decoration: none
	transition: all .2s
	&:hover
		color: $secondary

ul
	padding: 0
	margin: 0
	list-style: none

.links
	margin: 5px 0 15px
	padding: 10px
	border-bottom: 1px solid #e5e5e5
	&_title
		padding-bottom: 5px
		margin-bottom: 6px
		font-size: 1.5rem
		border-bottom: 1px solid #f1f1f1
	&_list
		li
			margin-bottom: 5px
			&:last-child
				margin-bottom: 0

.grid
	padding: 10px
	display: grid

	// единица измерения fr (фракция)
	// auto-fill - колонки переносятся когда достигают своего придела. Остается пространство для ифимерных элементов, которых нет, но могли бы быть
	// auto-fit - колонки переносятся когда достигают своего придела. когда переносятся, то стают на всю ширину

	// Колонки
	// grid-template-columns: 300px 300px 300px // определить колонки: колличество и ширина
	// grid-template-columns: 2fr 1fr 200px
	// grid-template-columns: repeat(3, 1fr) // 3 колонки по 1 фракции
	// grid-template-columns: repeat(2, 1fr 2fr) // 2 группы колонок по 1 фракции и 2 фракции
	// grid-template-columns: 100px repeat(2, 1fr 2fr) // первая колонка 100px, а потом чередование
	// grid-template-columns: minmax(150px, 250px) 1fr 1fr // первая колонка имеет минимальный размер 150px, максимальный размер - 250px
	// grid-template-columns: repeat(4, 1fr)
	// auto-fill
	// grid-template-columns: repeat(auto-fill, 400px)
	// grid-template-columns: repeat(auto-fill, minmax(150px, 1fr))
	// auto-fit
	// grid-template-columns: repeat(auto-fit, minmax(300px, 1fr))
	
	// ЛИНИИ
	// grid-template-rows: 150px 150px // определить ряды (свойства рядов): высота первого ряда
	// grid-template-rows: 150px 200px 250px auto

	// сокращенная запись grid-template-columns и grid-template-rows
	grid-template: repeat(3, 200px) / repeat(4, 1fr)
	
	// ВЫСОТА ИТЕМОВ
	grid-auto-rows: 150px // дефолтное значение высоты рядов
	// grid-auto-rows: minmax(100px, auto) // минимальная высота вряде 100px, максимальная - auto

	grid-column-gap: 20px // расстояние между колонками
	grid-row-gap: 20px // расстояние между рядами
	grid-gap: 10px // объединение расстояний между блоками

	// порядок элементов
	// grid-auto-flow: column // нужно добавить `grid-template-rows` - порядок по вертикали

	// == выравнивание

	// = горизонтальное
	// justify-items: start
	// justify-items: end
	// justify-items: center
	// justify-items: stretch

	// вертикальное
	// align-items: start
	// align-items: end
	// align-items: center
	// align-items: stretch


	li
		padding: .625em 1em
		background-color: $main
		color: #fff;
		border-radius: 6px
		word-wrap: break-word
		&:nth-child(even)
			background-color: darken($main, 15%)

		&:nth-child(1)
			// позициия элементов на линии
			// grid-column-start: 1
			// grid-column-end: 3
			// позициия элементов на линии: краткая запись
			// grid-column: 1 / 3
			// grid-column: 1 / -1 // на всю ширину

			// == выравнивание одного элемента

			// = по вертикали
			// align-self: center

			// = по вертикали
			// justify-self: center

		&:nth-child(2)
			// позиция второго элемента
			// grid-column: 1
			// grid-row: 2 // колонка в ряду. Сокращение для grid-row-start и grid-row-end.

		&:nth-child(3)
			// grid-column: 2 / 4
			// grid-row: 2


// == Управление областями ==
.block
	padding: .625em 1em
	display: grid
	grid-gap: 20px
	grid-template-areas: "header" "article" "aside" "footer" // указать что хотьм вывести

	&_item
		padding: .625em 1em
		background-color: $success
		color: #fff;
		border-radius: 6px

		&:nth-child(even)
			background-color: darken($success, 15%)

	@media (min-width: 768px)
		grid-template-columns: 2fr 4fr
		grid-template-areas: "header header" "aside article" "footer ." // точка символизирует пустоту
		grid-template-areas: "header header" "aside article" "footer footer"
		grid-template-areas: "header header" "aside article" "aside footer"

	// ... задать каждой области свое имя через grid-area
	// ... для родителя с display: grid задать свойство `grid-template-areas`

	header
		grid-area: header

	article
		grid-area: article

	aside
		grid-area: aside
	footer
		grid-area: footer
